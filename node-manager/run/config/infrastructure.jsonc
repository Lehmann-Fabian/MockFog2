// defines the to be emulated infrastructure and general information on AWS
{
    "aws": {
        "ec2_region": "eu-central-1",
        "ssh_key_name": "MasterThesisKey",
        "agent_port": 3100 // the port on which the node agent provides its services
    },
    // every machine in this list defines a single remote host setup on AWS EC2
    "machines": [
        {
            "machine_name": "server1", // machine_name is also used to set the "Name" tag on EC2
            "type": "t3.small",
            "image": "ami-08c148bb835696b45"
        },
        {
            "machine_name": "server2",
            "type": "t3.small",
            "image": "ami-08c148bb835696b45"
        },
        {
            "machine_name": "server3",
            "type": "t3.small",
            "image": "ami-08c148bb835696b45"
        },
        {
            "machine_name": "server4",
            "type": "t3.small",
            "image": "ami-08c148bb835696b45"
        },
        {
            "machine_name": "server5",
            "type": "t3.small",
            "image": "ami-08c148bb835696b45"
        },
        {
            "machine_name": "server6",
            "type": "t3.small",
            "image": "ami-08c148bb835696b45"
        }
    ],
    /*
        Every machine must have at least one connection to another machine.
        One can specify traffic shaping rules; they are applied to the outgoing traffic.
        Connections are bidirectional; thus, the same rule is applied to the "from" and "to" machine.
        All rules except "from", "to", and "delay" are optional.
        The latency between two machines is the sum of all delays on the shortest path.
        The rate between two machines is the minimum rate on the shortest path.
        For all other traffic shaping rules: the value applied to the connection between two machines is the average of all values on the shortest path.
    */
    "connections": [
        {
            "from": "server1",
            "to": "server2",
            "delay": 1, // connection latency/delay in ms, set on each machine so roundtrip will be 20ms
            "rate": "50mbps", // available connection bandwidth rate (units: bps, kbps, mbps, gbps)
            "delay-distro": 0, // connection delay distribution in ms
            "duplicate": 0, // connection duplicate probablity in %
            "loss": 20, // connection loss probability in %
            "corrupt": 0, // connection corrupt probality in %
            "reordering": 0 // connection reordering probability in %
        },{
            "from": "server2",
            "to": "server3",
            "delay": 1, // connection latency/delay in ms, set on each machine so roundtrip will be 20ms
            "rate": "50mbps", // available connection bandwidth rate (units: bps, kbps, mbps, gbps)
            "delay-distro": 0, // connection delay distribution in ms
            "duplicate": 0, // connection duplicate probablity in %
            "loss": 20, // connection loss probability in %
            "corrupt": 0, // connection corrupt probality in %
            "reordering": 0 // connection reordering probability in %
        },
        {
            "from": "server1",
            "to": "server3",
            "delay": 1, // connection latency/delay in ms, set on each machine so roundtrip will be 20ms
            "rate": "50mbps", // available connection bandwidth rate (units: bps, kbps, mbps, gbps)
            "delay-distro": 0, // connection delay distribution in ms
            "duplicate": 0, // connection duplicate probablity in %
            "loss": 20, // connection loss probability in %
            "corrupt": 0, // connection corrupt probality in %
            "reordering": 0 // connection reordering probability in %
        },
        {
            "from": "server4",
            "to": "server3",
            "delay": 1, // connection latency/delay in ms, set on each machine so roundtrip will be 20ms
            "rate": "50mbps", // available connection bandwidth rate (units: bps, kbps, mbps, gbps)
            "delay-distro": 0, // connection delay distribution in ms
            "duplicate": 0, // connection duplicate probablity in %
            "loss": 20, // connection loss probability in %
            "corrupt": 0, // connection corrupt probality in %
            "reordering": 0 // connection reordering probability in %
        },
        {
            "from": "server5",
            "to": "server4",
            "delay": 1, // connection latency/delay in ms, set on each machine so roundtrip will be 20ms
            "rate": "50mbps", // available connection bandwidth rate (units: bps, kbps, mbps, gbps)
            "delay-distro": 0, // connection delay distribution in ms
            "duplicate": 0, // connection duplicate probablity in %
            "loss": 20, // connection loss probability in %
            "corrupt": 0, // connection corrupt probality in %
            "reordering": 0 // connection reordering probability in %
        },
        {
            "from": "server5",
            "to": "server6",
            "delay": 1, // connection latency/delay in ms, set on each machine so roundtrip will be 20ms
            "rate": "50mbps", // available connection bandwidth rate (units: bps, kbps, mbps, gbps)
            "delay-distro": 0, // connection delay distribution in ms
            "duplicate": 0, // connection duplicate probablity in %
            "loss": 20, // connection loss probability in %
            "corrupt": 0, // connection corrupt probality in %
            "reordering": 0 // connection reordering probability in %
        },
        {
            "from": "server6",
            "to": "server1",
            "delay": 1, // connection latency/delay in ms, set on each machine so roundtrip will be 20ms
            "rate": "50mbps", // available connection bandwidth rate (units: bps, kbps, mbps, gbps)
            "delay-distro": 0, // connection delay distribution in ms
            "duplicate": 0, // connection duplicate probablity in %
            "loss": 20, // connection loss probability in %
            "corrupt": 0, // connection corrupt probality in %
            "reordering": 0 // connection reordering probability in %
        }
    ]
}
